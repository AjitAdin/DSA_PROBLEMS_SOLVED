Great question! The **monotonic stack** pattern appears frequently in interviews, especially when solving array-based problems that require optimizing brute-force comparisons. Below are **some popular and commonly asked application questions** of monotonic stacks, along with the pattern they use:

---

## ‚úÖ **1. Daily Temperatures**

**Leetcode 739**

> Return the number of days until a warmer temperature. If none, return 0.

* **Pattern**: Next Greater Element to the Right (but return distance instead of value)
* **Traverse**: Right ‚Üí Left
* **Stack**: Monotonic Decreasing (stores **indices**, not values)

---

## ‚úÖ **2. Next Greater Element I / II**

**Leetcode 496 & 503**

> For a circular or non-circular array, find the next greater element for each item.

* **Pattern**: Next Greater Element to the Right
* **Traverse**: Right ‚Üí Left (and wrap around for circular version)
* **Stack**: Monotonic Decreasing

---

## ‚úÖ **3. Largest Rectangle in Histogram**

**Leetcode 84**

> Given heights of bars, find the largest rectangular area in the histogram.

* **Pattern**: Next Smaller Element to Left and Right
* **Use**: Find the width by computing boundaries to left/right
* **Stack**: Monotonic Increasing
* **Optimization**: One-pass version also possible

---

## ‚úÖ **4. Trapping Rain Water**

**Leetcode 42**

> Given elevation heights, compute how much water can be trapped.

* **Pattern**: Variant using stack to store **indices**
* **Stack**: Monotonic Decreasing
* **Trick**: Water is trapped between bars, calculate when height increases

---

## ‚úÖ **5. Stock Span Problem**

**GeeksforGeeks Classic / Leetcode Variant**

> For each day, how many consecutive days before it had a lower or equal price?

* **Pattern**: Previous Greater Element (to the left)
* **Traverse**: Left ‚Üí Right
* **Stack**: Monotonic Decreasing (based on stock prices)

---

## ‚úÖ **6. Remove K Digits**

**Leetcode 402**

> Remove `k` digits to get the smallest possible number.

* **Pattern**: Monotonic Increasing Stack
* **Goal**: Maintain ascending order, pop when digits violate the rule
* **Stack**: Stores characters/digits

---

## ‚úÖ **7. Asteroid Collision**

**Leetcode 735**

> Simulate collisions of asteroids moving in different directions.

* **Pattern**: Monotonic Stack (with custom collision rules)
* **Stack**: Custom logic, not strictly increasing/decreasing
* **Pop**: When a left-moving asteroid meets a smaller right-moving one

---

## ‚úÖ **8. Sum of Subarray Minimums**

**Leetcode 907**

> Sum the minimum value of all subarrays.

* **Pattern**: Next Smaller Element (Left & Right)
* **Trick**: Count how many subarrays each element is minimum in
* **Stack**: Monotonic Increasing

---

## ‚úÖ **9. Maximum of Minimum for Every Window Size**

> For every window size, find the maximum among minimums.

* **Pattern**: Compute spans using NSE to left and right
* **Stack**: Monotonic Increasing
* **Used In**: Optimization of sliding window problems

---

## ‚úÖ **10. Minimum Add to Make Parentheses Valid**

**Leetcode 921**

> Count how many parentheses you need to add to make the string valid.

* **Pattern**: Stack matching open/close parentheses
* **Not strictly monotonic**, but uses similar push-pop balancing

---

## üîÅ Summary of Stack Uses in These Problems:

| Problem             | Stack Maintains        | Stack Order  | Traverse | Stores      |
| ------------------- | ---------------------- | ------------ | -------- | ----------- |
| Daily Temperatures  | Next greater temp      | Decreasing   | R ‚Üí L    | Indices     |
| Histogram Max Area  | Next smaller heights   | Increasing   | L ‚Üí R    | Indices     |
| Trapping Rain Water | Lower walls            | Decreasing   | L ‚Üí R    | Indices     |
| Stock Span          | Previous greater price | Decreasing   | L ‚Üí R    | Indices     |
| Remove K Digits     | Smallest number        | Increasing   | L ‚Üí R    | Digits      |
| Asteroid Collision  | Collision candidates   | Custom order | L ‚Üí R    | Sizes/signs |

---

Would you like a deep dive or code walkthrough for any specific one of these? I can also help compare them to find patterns in interviews.



Here‚Äôs a list of **similar problems** to **Daily Temperatures** that involve the **Monotonic Stack pattern**‚Äîusually for **next greater/smaller element**, or span problems. These are popular in interviews and coding platforms like LeetCode, Codeforces, and HackerRank.

---

### üî• **Next Greater / Smaller Element Problems**

| Problem Name                                                                                                            | Type            | Description                                                                             |
| ----------------------------------------------------------------------------------------------------------------------- | --------------- | --------------------------------------------------------------------------------------- |
| **Next Greater Element I** ([LeetCode 496](https://leetcode.com/problems/next-greater-element-i/))                      | Next Greater    | Given two arrays, find next greater element of elements in first array from the second. |
| **Next Greater Element II** ([LeetCode 503](https://leetcode.com/problems/next-greater-element-ii/))                    | Circular Array  | Like the above but circular; wrap around the array.                                     |
| **Next Greater Node in Linked List** ([LeetCode 1019](https://leetcode.com/problems/next-greater-node-in-linked-list/)) | Linked List     | Same idea, but using a linked list instead of array.                                    |
| **Daily Temperatures** ([LeetCode 739](https://leetcode.com/problems/daily-temperatures/))                              | Next Warmer Day | You're solving this one! Monotonic decreasing stack from right to left.                 |

---

### üìâ **Next Smaller Element Problems**

| Problem Name                                                                                                      | Type         | Description                                                     |
| ----------------------------------------------------------------------------------------------------------------- | ------------ | --------------------------------------------------------------- |
| **Next Smaller Element** (variation, common on coding sites)                                                      | Custom       | Find next smaller element to the right of each array element.   |
| **Largest Rectangle in Histogram** ([LeetCode 84](https://leetcode.com/problems/largest-rectangle-in-histogram/)) | Stack Trick  | Use next smaller to left/right to calculate area of rectangles. |
| **Sum of Subarray Minimums** ([LeetCode 907](https://leetcode.com/problems/sum-of-subarray-minimums/))            | Subarray Min | Uses monotonic stack to compute contributions of each element.  |

---

### üì¶ **Stock Span / Span-based Problems**

| Problem Name                                                                               | Type             | Description                                                                       |
| ------------------------------------------------------------------------------------------ | ---------------- | --------------------------------------------------------------------------------- |
| **Online Stock Span** ([LeetCode 901](https://leetcode.com/problems/online-stock-span/))   | Stack Span       | Compute number of consecutive days before today where stock was <= today's price. |
| **Asteroid Collision** ([LeetCode 735](https://leetcode.com/problems/asteroid-collision/)) | Stack Simulation | Simulate collisions ‚Äî decreasing stack pattern helps here.                        |

---

### üîÅ **Pattern Summary: Monotonic Stack Use Cases**

| Goal                         | Stack Type                                         |
| ---------------------------- | -------------------------------------------------- |
| **Next Greater**             | Monotonic decreasing stack                         |
| **Next Smaller**             | Monotonic increasing stack                         |
| **Previous Greater/Smaller** | Same, but iterate left to right                    |
| **Span problems**            | Stack of indices, comparing current with stack top |

---

Let me know if you'd like problems grouped by difficulty or with links to practice sets!

